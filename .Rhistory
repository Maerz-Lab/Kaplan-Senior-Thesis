dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Ensure that 'merged_with_weather_clean' has unique rows based on 'Year' and 'Tank.ID'
merged_clean_unique <- merged_with_weather_clean %>%
distinct(Year, Tank.ID, .keep_all = TRUE)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged_clean_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean,
prcp_mean.std, temp_max.std, temp_min.std,
Stocking.density.std),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Step 1: Ensure merged_with_weather_clean has the correct columns
merged_with_weather_clean <- merged_with_weather_clean %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean,
prcp_mean.std, temp_max.std, temp_min.std,
Stocking.density.std, Date.metamorphosed, Mass.g.metamorphosed)
# Step 2: Add missing columns to dead_individuals (Date.metamorphosed and Mass.g.metamorphosed)
dead_individuals <- dead_individuals %>%
mutate(
Date.metamorphosed = NA,
Mass.g.metamorphosed = NA
)
# Step 3: Ensure both data frames have the same column names in the same order
merged_with_weather_clean_columns <- merged_with_weather_clean
# Step 4: Use rbind to combine the dataframes (matching columns)
all.tadpoles <- rbind(merged_with_weather_clean_columns, dead_individuals)
colnames(merged_with_weather_clean)
colnames(dead_individuals)
# Step 1: Add the 'Fate' column to 'merged_with_weather_clean' with a value of 1
merged_with_weather_clean <- merged_with_weather_clean %>%
mutate(Fate = 1)
# Step 2: Ensure both dataframes have the same column names in the same order
# First, ensure 'dead_individuals' has the 'Fate' column
dead_individuals <- dead_individuals %>%
mutate(Fate = 0)  # Set Fate = 0 for dead individuals
# Step 3: Ensure column order is the same for both dataframes
column_order <- c("Year", "Tank.ID", "Clutch.ID", "Date.stocked", "Stocking.density",
"temp_min", "temp_median", "temp_max", "temp_mean",
"prcp_cumulative", "prcp_mean", "prcp_median",
"vp_min", "vp_max", "vp_median", "vp_mean",
"prcp_mean.std", "temp_max.std", "temp_min.std",
"Stocking.density.std", "Date.metamorphosed", "Mass.g.metamorphosed", "Fate")
merged_with_weather_clean <- merged_with_weather_clean %>%
select(all_of(column_order))
dead_individuals <- dead_individuals %>%
select(all_of(column_order))
# Step 4: Combine the two dataframes using rbind
all.tadpoles <- rbind(merged_with_weather_clean, dead_individuals)
View(all.tadpoles)
View(all.tadpoles)
View(merged.Master.met)
View(weather_summary)
View(weather_summary)
# Left join weather_summary into merged.Master.met based on 'Year'
merged.Master.met <- left_join(merged.Master.met, weather_summary, by = "Year")
weather_summary$std_temp_min <- scale(weather_summary$temp_min, center = TRUE, scale = TRUE)
weather_summary$std_temp_min <- scale(weather_summary$temp_min, center = TRUE, scale = TRUE)
weather_summary$std_temp_median <- scale(weather_summary$temp_median, center = TRUE, scale = TRUE)
weather_summary$std_temp_max <- scale(weather_summary$temp_max, center = TRUE, scale = TRUE)
weather_summary$std_prcp_cumulative <- scale(weather_summary$prcp_cumulative, center = TRUE, scale = TRUE)
weather_summary$std_prcp_mean <- scale(weather_summary$prcp_mean, center = TRUE, scale = TRUE)
weather_summary$std_prcp_median <- scale(weather_summary$prcp_median, center = TRUE, scale = TRUE)
weather_summary$std_vp_min <- scale(weather_summary$vp_min, center = TRUE, scale = TRUE)
weather_summary$std_vp_median <- scale(weather_summary$vp_median, center = TRUE, scale = TRUE)
weather_summary$std_vp_mean <- scale(weather_summary$vp_mean, center = TRUE, scale = TRUE)
weather_summary$std_vp_max <- scale(weather_summary$vp_max, center = TRUE, scale = TRUE)
# Create a master dataset with all subsetted data files
merged.Master.met <- rbind(master.met20092011, master.met2012, master.met2013, master.met2015, master.met2016, master.met2017, master.met2018,
master.met2019, master.met2021, master.met2022, master.met2023, master.met2024)
# Saving full merged master dataframe to source
write.csv(merged.Master.met, "merged.Master.met.csv", row.names = FALSE)
merged.Master.met
merged.Master.met
# Change variable types to characters
merged.Master.met$Year <- as.character(merged.Master.met$Year)
weather_summary$year <- as.character(weather_summary$year)
weather_summary <- weather_summary %>%
rename(Year = year)
# Left join weather_summary into merged.Master.met based on 'Year'
merged.Master.met <- left_join(merged.Master.met, weather_summary, by = "Year")
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Ensure that 'merged_with_weather_clean' has unique rows based on 'Year' and 'Tank.ID'
merged.master.met_unique <- merged.Master.met %>%
distinct(Year, Tank.ID, .keep_all = TRUE)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean,
prcp_mean.std, temp_max.std, temp_min.std,
Stocking.density.std),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
weather_summary$std_Stocking.denity <- scale(weather_summary$Stocking.density, center = TRUE, scale = TRUE)
weather_summary$std_temp_mean <- scale(weather_summary$temp_mean, center = TRUE, scale = TRUE)
# Create a master dataset with all subsetted data files
merged.Master.met <- rbind(master.met20092011, master.met2012, master.met2013, master.met2015, master.met2016, master.met2017, master.met2018,
master.met2019, master.met2021, master.met2022, master.met2023, master.met2024)
# Saving full merged master dataframe to source
write.csv(merged.Master.met, "merged.Master.met.csv", row.names = FALSE)
# Change variable types to characters
merged.Master.met$Year <- as.character(merged.Master.met$Year)
weather_summary$year <- as.character(weather_summary$year)
weather_summary <- weather_summary %>%
rename(Year = year)
# Left join weather_summary into merged.Master.met based on 'Year'
merged.Master.met <- left_join(merged.Master.met, weather_summary, by = "Year")
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Ensure that 'merged_with_weather_clean' has unique rows based on 'Year' and 'Tank.ID'
merged.master.met_unique <- merged.Master.met %>%
distinct(Year, Tank.ID, .keep_all = TRUE)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
# Ensure that 'merged_with_weather_clean' has unique rows based on 'Year' and 'Tank.ID'
merged.master.met_unique <- merged.Master.met %>%
distinct(Year, Tank.ID, .keep_all = TRUE)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Step 1: Add the 'Fate' column to 'merged_with_weather_clean' with a value of 1
merged_with_weather_clean <- merged_with_weather_clean %>%
mutate(Fate = 1)
# Step 2: Ensure both dataframes have the same column names in the same order
# First, ensure 'dead_individuals' has the 'Fate' column
dead_individuals <- dead_individuals %>%
mutate(Fate = 0)  # Set Fate = 0 for dead individuals
# Step 3: Ensure column order is the same for both dataframes
column_order <- c("Year", "Tank.ID", "Clutch.ID", "Date.stocked", "Stocking.density",
"temp_min", "temp_median", "temp_max", "temp_mean",
"prcp_cumulative", "prcp_mean", "prcp_median",
"vp_min", "vp_max", "vp_median", "vp_mean", "std_temp_min", "std_temp_median", "std_temp_max", "std_temp_mean",
"std_prcp_cumulative", "std_prcp_mean", "std_prcp_median",
"std_vp_min", "std_vp_max", "std_vp_median", "std_vp_mean",
"Stocking.density.std", "Date.metamorphosed", "Mass.g.metamorphosed", "Fate")
merged.Master.met <- merged.Master.met %>%
select(all_of(column_order))
# Step 1: Add the 'Fate' column to 'merged_with_weather_clean' with a value of 1
merged.Master.met <- merged.Master.met %>%
mutate(Fate = 1)
View(merged.master.met_unique)
View(merged.master.met_unique)
dead_individuals <- dead_individuals %>%
mutate(Fate = 0)
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
# Step 3: Ensure column order is the same for both dataframes
column_order <- c("Year", "Tank.ID", "Clutch.ID", "Date.stocked", "Stocking.density",
"temp_min", "temp_median", "temp_max", "temp_mean",
"prcp_cumulative", "prcp_mean", "prcp_median",
"vp_min", "vp_max", "vp_median", "vp_mean", "std_temp_min", "std_temp_median", "std_temp_max", "std_temp_mean",
"std_prcp_cumulative", "std_prcp_mean", "std_prcp_median",
"std_vp_min", "std_vp_max", "std_vp_median", "std_vp_mean",
"Date.metamorphosed", "Mass.g.metamorphosed", "Fate")
merged.Master.met <- merged.Master.met %>%
select(all_of(column_order))
dead_individuals <- dead_individuals %>%
select(all_of(column_order))
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
dead_individuals <- dead_individuals %>%
select(all_of(column_order))
dead_individuals <- dead_individuals %>%
mutate(Date.metamorphosed = "NA")
dead_individuals <- dead_individuals %>%
mutate(Mass.g.metamorphosed = "NA")
dead_individuals <- dead_individuals %>%
select(all_of(column_order))
# Step 4: Combine the two dataframes using rbind
all.tadpoles <- rbind(merged_with_weather_clean, dead_individuals)
# Step 4: Combine the two dataframes using rbind
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
# Convert date columns to Date class in both data frames
merged.Master.met$Date.stocked <- as.Date(merged.Master.met$Date.stocked, format = "%Y-%m-%d")  # Adjust format as needed
merged.Master.met$Date.metamorphosed <- as.Date(merged.Master.met$Date.metamorphosed, format = "%Y-%m-%d")  # Adjust format as needed
dead_individuals$Date.stocked <- as.Date(dead_individuals$Date.stocked, format = "%Y-%m-%d")  # Adjust format as needed
dead_individuals$Date.metamorphosed <- as.Date(dead_individuals$Date.metamorphosed, format = "%Y-%m-%d")  # Adjust format as needed
# Now combine the two dataframes
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
all.tadpoles$std_Stocking.density <- scale(all.tadpoles$Stocking.density, center = TRUE, scale = TRUE)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = pred, c("std_Stocking.density"))
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
library(ggplot2)
# Plotting Survivorship Probability vs. Standardized Stocking Density
ggplot(dead_individuals, aes(x = Stocking.density.std, y = Fate)) +
geom_jitter(width = 0.1, height = 0.05, alpha = 0.5) +  # Add jitter for better visualization
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = "blue") +
labs(
title = "Tank Density vs. Survivorship Probability",
x = "Standardized Stocking Density",
y = "Survivorship Probability"
) +
theme_minimal()
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Now combine the two dataframes
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
all.tadpoles$std_Stocking.density <- scale(all.tadpoles$Stocking.density, center = TRUE, scale = TRUE)
# Step 5: Check the result
nrow(all.tadpoles)  # Should now have the correct number of rows
head(all.tadpoles)  # Check the first few rows
# Step 2: Create a dataframe for surviving individuals (Fate = 1)
# Assuming all.tadpoles.livedead already contains the survivors (Fate = 1)
survivors <- all.tadpoles.livedead %>%
filter(Fate == 1)  # Filter for survivors
# Step 3: Combine the dead individuals with the survivors
# We append the rows for dead individuals to the survivors dataframe
all_data_with_dead <- bind_rows(survivors, dead_individuals)
# View the resulting dataframe
head(all_data_with_dead)
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead)) %>%                      # Remove rows with NA in No.dead
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather_clean %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, prcp_mean.std, temp_max.std,
temp_min.std, Stocking.density.std),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
# Perform the left join and select the desired covariates
library(dplyr)
# Ensure that 'merged_with_weather_clean' has unique rows based on 'Year' and 'Tank.ID'
merged.master.met_unique <- merged.Master.met %>%
distinct(Year, Tank.ID, .keep_all = TRUE)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Step 1: Add the 'Fate' column to 'merged.Master.met' with a value of 1
merged.Master.met <- merged.Master.met %>%
mutate(Fate = 1)
dead_individuals <- dead_individuals %>%
mutate(Fate = 0)
dead_individuals <- dead_individuals %>%
mutate(Date.metamorphosed = "NA")
dead_individuals <- dead_individuals %>%
mutate(Mass.g.metamorphosed = "NA")
# Step 3: Ensure column order is the same for both dataframes
column_order <- c("Year", "Tank.ID", "Clutch.ID", "Date.stocked", "Stocking.density",
"temp_min", "temp_median", "temp_max", "temp_mean",
"prcp_cumulative", "prcp_mean", "prcp_median",
"vp_min", "vp_max", "vp_median", "vp_mean", "std_temp_min", "std_temp_median", "std_temp_max", "std_temp_mean",
"std_prcp_cumulative", "std_prcp_mean", "std_prcp_median",
"std_vp_min", "std_vp_max", "std_vp_median", "std_vp_mean",
"Date.metamorphosed", "Mass.g.metamorphosed", "Fate")
merged.Master.met <- merged.Master.met %>%
select(all_of(column_order))
dead_individuals <- dead_individuals %>%
select(all_of(column_order))
# Convert date columns to Date class in both data frames
merged.Master.met$Date.stocked <- as.Date(merged.Master.met$Date.stocked, format = "%Y-%m-%d")  # Adjust format as needed
merged.Master.met$Date.metamorphosed <- as.Date(merged.Master.met$Date.metamorphosed, format = "%Y-%m-%d")  # Adjust format as needed
dead_individuals$Date.stocked <- as.Date(dead_individuals$Date.stocked, format = "%Y-%m-%d")  # Adjust format as needed
dead_individuals$Date.metamorphosed <- as.Date(dead_individuals$Date.metamorphosed, format = "%Y-%m-%d")  # Adjust format as needed
# Now combine the two dataframes
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
all.tadpoles$std_Stocking.density <- scale(all.tadpoles$Stocking.density, center = TRUE, scale = TRUE)
# Step 5: Check the result
nrow(all.tadpoles)  # Should now have the correct number of rows
head(all.tadpoles)  # Check the first few rows
View(all.tadpoles)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial), title(main = "Tank Density vs. Survivorship Probability", xlab = "Standardized Stocking Density")
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial, title(main = "Tank Density vs. Survivorship Probability", xlab = "Standardized Stocking Density"))
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
plot(all.tadpoles$std_Stocking.density, all.tadpoles$Fate,
main = "Tank Density vs. Survivorship Probability",
xlab = "Standardized Stocking Density",
ylab = "Survivorship (0 = dead, 1 = alive)")
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial, main = "Tank Density vs. Survivorship Probability",
xlab = "Standardized Stocking Density",
ylab = "Survivorship (0 = dead, 1 = alive)"))
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial, main = "Tank Density vs. Survivorship Probability",
xlab = "Standardized Stocking Density",
ylab = "Survivorship (0 = dead, 1 = alive)")
# Plot the model
plot(fate_model)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(mass_model,
title = "Effects of Weather and Stocking Density on Mass at Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
# Now combine the two dataframes
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
all.tadpoles$std_Stocking.density <- scale(all.tadpoles$Stocking.density, center = TRUE, scale = TRUE)
# Step 5: Check the result
nrow(all.tadpoles)  # Should now have the correct number of rows
head(all.tadpoles)  # Check the first few rows
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
# Add title and axis labels
title(main = "Tank Density vs. Survivorship Probability",
xlab = "Standardized Stocking Density",
ylab = "Survivorship (0 = dead, 1 = alive)")
# Add title and axis labels
fate_model <- title(main = "Tank Density vs. Survivorship Probability",
xlab = "Standardized Stocking Density",
ylab = "Survivorship (0 = dead, 1 = alive)")
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
# Plot the model
plot(fate_model)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
View(master.met2016)
plot_model(fate_model, type = "pred", c("std_Stocking.density", title = "Tank Density vs. Survivorship Probability"))
plot_model(mass_model, type = "pred", c("std_Stocking.density"))
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
# Standardize variables of temp max, temp min, prcp mean, and stocking density
merged_with_weather <- merged_with_weather %>%
mutate(
Stocking.density.std = (Stocking.density - mean(Stocking.density, na.rm = TRUE)) / sd(Stocking.density, na.rm = TRUE),
temp_max.std = (temp_max - mean(temp_max, na.rm = TRUE)) / sd(temp_max, na.rm = TRUE),
temp_min.std = (temp_min - mean(temp_min, na.rm = TRUE)) / sd(temp_min, na.rm = TRUE),
prcp_mean.std = (prcp_mean - mean(prcp_mean, na.rm = TRUE)) / sd(prcp_mean, na.rm = TRUE))
# Remove NA values from days and mass
merged_with_weather_clean <- merged_with_weather %>%
filter(!is.na(Days.to.metamorphosis), !is.na(Mass.g.metamorphosed))
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
