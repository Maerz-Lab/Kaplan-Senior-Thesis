days_mean = ifelse(all(is.na(Days.to.metamorphosis) | Days.to.metamorphosis == 0), NA, mean(Days.to.metamorphosis[Days.to.metamorphosis != 0], na.rm = TRUE)),
days_max = ifelse(all(is.na(Days.to.metamorphosis) | Days.to.metamorphosis == 0), NA, max(Days.to.metamorphosis[Days.to.metamorphosis != 0], na.rm = TRUE))
)
# Summarized days to metamorphosis per year graph
ggplot(met_summary, aes(x = Year)) +
geom_line(aes(y = days_mean, color = "Mean"), size = 1) +
geom_point(aes(y = days_mean, color = "Mean"), size = 2) +
geom_line(aes(y = days_max, color = "Max"), size = 1) +
geom_point(aes(y = days_max, color = "Max"), size = 2) +
geom_line(aes(y = days_min, color = "Min"), size = 1) +
geom_point(aes(y = days_min, color = "Min"), size = 2) +
geom_line(aes(y = days_median, color = "Median"), size = 1) +
geom_point(aes(y = days_median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "steelblue", "Max" = "red", "Min" = "black", "Median" = "green")) +
labs(
title = "Days to Metamorphosis per Year",
x = "Year",
y = "Days to Metamorphosis",
color = "Statistic") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif"))
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# Standardize variables of temp max, temp min, prcp mean, and stocking density
merged_with_weather <- merged_with_weather %>%
mutate(
Stocking.density.std = (Stocking.density - mean(Stocking.density, na.rm = TRUE)) / sd(Stocking.density, na.rm = TRUE),
temp_max.std = (temp_max - mean(temp_max, na.rm = TRUE)) / sd(temp_max, na.rm = TRUE),
temp_min.std = (temp_min - mean(temp_min, na.rm = TRUE)) / sd(temp_min, na.rm = TRUE),
prcp_mean.std = (prcp_mean - mean(prcp_mean, na.rm = TRUE)) / sd(prcp_mean, na.rm = TRUE))
# Remove NA values from days and mass
merged_with_weather_clean <- merged_with_weather %>%
filter(!is.na(Days.to.metamorphosis), !is.na(Mass.g.metamorphosed))
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# GRAPH - Days to meta by SD
ggplot(merged.Master.met %>% filter(Stocking.density %in% c(30, 50, 75, 100)),
aes(x = factor(Stocking.density), y = Days.to.metamorphosis)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill= "lightblue") +
labs(
title = "Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Days to Metamorphosis"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# GRAPH - Days to meta by SD
ggplot(merged.Master.met %>% filter(Stocking.density %in% c(30, 50, 75, 100)),
aes(x = factor(Stocking.density), y = Days.to.metamorphosis)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill= "lightblue") +
labs(
title = "Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Days to Metamorphosis"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# GRAPH - mass by SD
ggplot(merged.Master.met %>% filter(Stocking.density %in% c(30, 50, 75, 100)),
aes(x = factor(Stocking.density), y = Mass.g.metamorphosed)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "pink") +
labs(
title = "Mass by Stocking Density",
x = "Stocking Density",
y = "Mass (g)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# GRAPH - Mean Temp vs Mean mass at meta per year
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 1) +
geom_point(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Mass at Metamorphosis" = "darkgreen")) +
labs(
title = "Mean Mass at Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0,200) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(mass_mean = mean(Mass.g.metamorphosed, na.rm = TRUE)) %>%
ungroup()
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 1) +
geom_point(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Mass at Metamorphosis" = "darkgreen")) +
labs(
title = "Mean Mass at Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0,200) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 1) +
geom_point(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Mass at Metamorphosis" = "darkgreen")) +
labs(
title = "Mean Mass at Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0,50) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 1) +
geom_point(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Mass at Metamorphosis" = "darkgreen")) +
labs(
title = "Mean Mass at Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0,30) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 1) +
geom_point(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 2) +
geom_line(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 1) +
geom_point(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Days to Metamorphosis" = "darkorange",
"Average Mass at Metamorphosis" = "darkgreen")) +
labs(
title = "Mean Days to Metamorphosis, Mass at Metamorphosis, and Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0, 150) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# Compute the average days to metamorphosis and mass per year
library(ggplot2)
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(days_mean = mean(Days.to.metamorphosis, na.rm = TRUE)) %>%
ungroup()
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(mass_mean = mean(Mass.g.metamorphosed, na.rm = TRUE)) %>%
ungroup()
# Compute the average days to metamorphosis and mass per year
library(ggplot2)
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(days_mean = mean(Days.to.metamorphosis, na.rm = TRUE)) %>%
ungroup()
library(ggplot)
library(dplyr)
library(ggplot2)
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(days_mean = mean(Days.to.metamorphosis, na.rm = TRUE)) %>%
ungroup()
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(mass_mean = mean(Mass.g.metamorphosed, na.rm = TRUE)) %>%
ungroup()
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 1) +
geom_point(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 2) +
geom_line(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 1) +
geom_point(aes(y = mass_mean, color = "Average Mass at Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Days to Metamorphosis" = "darkorange",
"Average Mass at Metamorphosis" = "darkgreen")) +
labs(
title = "Mean Days to Metamorphosis, Mass at Metamorphosis, and Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0, 150) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
library(sjPlot)
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# Standardize variables of temp max, temp min, prcp mean, and stocking density
merged_with_weather <- merged_with_weather %>%
mutate(
Stocking.density.std = (Stocking.density - mean(Stocking.density, na.rm = TRUE)) / sd(Stocking.density, na.rm = TRUE),
temp_max.std = (temp_max - mean(temp_max, na.rm = TRUE)) / sd(temp_max, na.rm = TRUE),
temp_min.std = (temp_min - mean(temp_min, na.rm = TRUE)) / sd(temp_min, na.rm = TRUE),
prcp_mean.std = (prcp_mean - mean(prcp_mean, na.rm = TRUE)) / sd(prcp_mean, na.rm = TRUE))
# Remove NA values from days and mass
merged_with_weather_clean <- merged_with_weather %>%
filter(!is.na(Days.to.metamorphosis), !is.na(Mass.g.metamorphosed))
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# Generate predictions manually for the plot
predict_data <- expand.grid(
temp_min.std = mean_temp_min,  # Use the mean of temp_min.std
temp_max.std = seq(min(merged_with_weather_clean$temp_max.std),
max(merged_with_weather_clean$temp_max.std), length.out = 100),
prcp_mean.std = 3.683709,  # Set the value of prcp_mean.std
Stocking.density.std = c(-2, 0, 2)  # Different levels of Stocking.density.std
)
# Generate predicted Days.to.metamorphosis values from the model, ignoring random effects
predict_data$Days.to.metamorphosis <- predict(days_model, newdata = predict_data, re.form = ~0)
# Plot the predictions with different color lines for Stocking.density.std
p1 <- ggplot(predict_data, aes(x = temp_max.std, y = Days.to.metamorphosis, color = factor(Stocking.density.std))) +
geom_line(size = 1) +  # Draw lines for each level of Stocking.density.std
scale_color_manual(values = c("red", "blue", "green")) +  # Customize the colors if needed
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis),
shape = 1, color = "black", size = 1) +  # Scatter plot points
labs(color = "Stocking Density") +  # Add a legend for color
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle("Effects of Weather and Stocking Density on Days to Metamorphosis")
# Print the plot
print(p1)
## SAME CODE, ADDED CONFIDENCE INTERVALS ##
# Use a fixed value for temp_min.std (e.g., the mean of temp_min.std)
mean_temp_min <- mean(merged_with_weather_clean$temp_min.std, na.rm = TRUE)
# Generate predictions manually for the plot
predict_data <- expand.grid(
temp_min.std = mean_temp_min,  # Use the mean of temp_min.std
temp_max.std = seq(min(merged_with_weather_clean$temp_max.std),
max(merged_with_weather_clean$temp_max.std), length.out = 100),
prcp_mean.std = 3.683709,  # Set the value of prcp_mean.std
Stocking.density.std = c(-2, 0, 2)  # Different levels of Stocking.density.std
)
# Generate predicted values and standard errors, ignoring random effects
predictions <- predict(days_model, newdata = predict_data, re.form = ~0, se.fit = TRUE)
# Add the fitted values and standard errors to the prediction data
predict_data$Days.to.metamorphosis <- predictions$fit
predict_data$se <- predictions$se.fit
# Calculate the confidence intervals (95% by default)
predict_data$CI_lower <- predict_data$Days.to.metamorphosis - 1.96 * predict_data$se
predict_data$CI_upper <- predict_data$Days.to.metamorphosis + 1.96 * predict_data$se
# Plot the predictions with confidence intervals
p1 <- ggplot(predict_data, aes(x = temp_max.std, y = Days.to.metamorphosis, color = factor(Stocking.density.std))) +
geom_line(size = 1) +  # Draw lines for each level of Stocking.density.std
geom_ribbon(aes(ymin = CI_lower, ymax = CI_upper, fill = factor(Stocking.density.std)), alpha = 0.2) +  # Add confidence intervals as shaded areas
scale_color_manual(values = c("red", "blue", "green")) +  # Customize the colors if needed
scale_fill_manual(values = c("red", "blue", "green")) +  # Same colors for the ribbons
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis),
shape = 1, color = "black", size = 1) +  # Scatter plot points
labs(color = "Stocking Density", fill = "Stocking Density") +  # Add a legend for color and fill
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle("Effects of Weather and Stocking Density on Days to Metamorphosis")
# Print the plot
print(p1)
## Predict effects on mass at metamorphosis
p2 <- plot_model(mass_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p2 <- p2 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Mass.g.metamorphosed), shape = 1, color = "black", size = 1)
p2
# Stocking density vs mass at meta
SD_MM <- plot_model(mass_model, type = "pred", terms = c("Stocking.density.std[-2, 0, 2]"))
SD_MM <- SD_MM +
geom_point(data = merged_with_weather_clean, aes(x = Stocking.density.std, y = Mass.g.metamorphosed), shape = 1, color = "black", size = 1)
SD_MM
# Plot the predictions with different color lines for Stocking.density.std
p1 <- ggplot(predict_data, aes(x = temp_max.std, y = Days.to.metamorphosis, color = factor(Stocking.density.std))) +
geom_line(size = 1) +  # Draw lines for each level of Stocking.density.std
scale_color_manual(values = c("red", "blue", "green")) +  # Customize the colors if needed
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis),
shape = 1, color = "black", size = 1) +  # Scatter plot points
labs(color = "Stocking Density") +  # Add a legend for color
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold")) +
ggtitle("Effects of Weather and Stocking Density on Days to Metamorphosis")
# Print the plot
print(p1)
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
summary(days_model)
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# MODEL - Estimated effects of standardized variables on mass at meta
mass_model <- lmer(Mass.g.metamorphosed ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(mass_model,
title = "Effects of Weather and Stocking Density on Mass at Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
plot_model(mass_model, type = "pred", c("std_Stocking.density"))
# GRAPH - Effects of weather and SD on days to metamorphosis
p1 <- plot_model(days_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p1 <- p1 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis), shape = 1, color = "black", size = 1)
p1
# Stocking density vs days to meta
SD_DTM <- plot_model(days_model, type = "pred", terms = c("Stocking.density.std[-2, 0, 2]"))
SD_STM <- SD_DTM +
geom_point(data = merged_with_weather_clean, aes(x = Stocking.density.std, y = Days.to.metamorphosis), shape = 1, color = "black", size = 1)
SD_DTM
SD_DTM
SD_DTM
# GRAPH - Effects of weather and SD on days to metamorphosis
p1 <- plot_model(days_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p1 <- p1 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis), shape = 1, color = "black", size = 1)
p1
## Predict effects on mass at metamorphosis
p2 <- plot_model(mass_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p2 <- p2 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Mass.g.metamorphosed), shape = 1, color = "black", size = 1)
p2
library(lme4)
library(dplyr)
library(ggplot2)
library(sjPlot)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
# MODEL - Estimated effects of standardized variables on survivorship
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ std_Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
Stocking.density.reverted <- Stocking.density.std * sd(Stocking.density) + mean(Stocking.density)
# Standardize variables of temp max, temp min, prcp mean, and stocking density
merged_with_weather <- merged_with_weather %>%
mutate(
Stocking.density.std = (Stocking.density - mean(Stocking.density, na.rm = TRUE)) / sd(Stocking.density, na.rm = TRUE),
temp_max.std = (temp_max - mean(temp_max, na.rm = TRUE)) / sd(temp_max, na.rm = TRUE),
temp_min.std = (temp_min - mean(temp_min, na.rm = TRUE)) / sd(temp_min, na.rm = TRUE),
prcp_mean.std = (prcp_mean - mean(prcp_mean, na.rm = TRUE)) / sd(prcp_mean, na.rm = TRUE))
Stocking.density.reverted <- Stocking.density.std * sd(Stocking.density) + mean(Stocking.density)
View(merged_with_weather)
all.tadpoles$Stocking.density <- all.tadpoles$std_Stocking.density * sd(all.tadpoles$Stocking.density) + mean(all.tadpoles$Stocking.density)
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
fate_model <- glmer(Fate ~ std_temp_min + std_temp_max + std_prcp_mean+ Stocking.density +
(1 | Year) + (1 | Tank.ID),
data = all.tadpoles,
family = binomial)
plot_model(fate_model)
plot_model(fate_model, type = "pred", c("std_Stocking.density"))
library(dplyr)
# Create a new dataframe with Tank.ID count by Year
Ind.per.tank <- merged.Master.met %>%
group_by(Year, Tank.ID) %>%
summarise(Ind.per.tank = n(), .groups = 'drop')
# Join Stocking.density to the tank_counts_by_year dataframe
Ind.per.tank <- Ind.per.tank %>%
left_join(merged.Master.met %>%
select(Year, Tank.ID, Stocking.density) %>%
distinct(),
by = c("Year", "Tank.ID"))
# View the resulting dataframe
head(Ind.per.tank)
Ind.per.tank$No.dead <- Ind.per.tank$Stocking.density - Ind.per.tank$Ind.per.tank
merged.Master.met$Fate <- 1
all.tadpoles.livedead <- merged_with_weather
library(tidyr)
# Ensure No.dead has valid values
Ind.per.tank$No.dead <- ifelse(Ind.per.tank$Stocking.density - Ind.per.tank$Ind.per.tank >= 0,
Ind.per.tank$Stocking.density - Ind.per.tank$Ind.per.tank,
NA)
library(dplyr)
library(tidyr)
# Step 1: Ensure No.dead is not NA or negative
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead) & No.dead >= 0) %>%  # Keep only rows with valid No.dead
uncount(No.dead) %>%  # Replicates each row No.dead times
select(Year, Tank.ID) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# View the first few rows of the data after removing dead_individuals
head(dead_individuals)
# Ensure that 'merged_with_weather_clean' has unique rows based on 'Year' and 'Tank.ID'
merged.master.met_unique <- merged.Master.met %>%
distinct(Year, Tank.ID, .keep_all = TRUE)
# Perform the left join to add the values from 'merged_with_weather_clean' to 'dead_individuals'
dead_individuals <- dead_individuals %>%
left_join(merged.master.met_unique %>%
select(Year, Tank.ID, Clutch.ID, Date.stocked, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, std_temp_min, std_temp_median, std_temp_max, std_temp_mean,
std_prcp_cumulative, std_prcp_mean, std_prcp_median,
std_vp_min, std_vp_max, std_vp_median, std_vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
# Step 1: Add the 'Fate' column to 'merged.Master.met' with a value of 1
merged.Master.met <- merged.Master.met %>%
mutate(Fate = 1)
dead_individuals <- dead_individuals %>%
mutate(Fate = 0)
dead_individuals <- dead_individuals %>%
mutate(Date.metamorphosed = "NA")
dead_individuals <- dead_individuals %>%
mutate(Mass.g.metamorphosed = "NA")
# Step 3: Ensure column order is the same for both dataframes
column_order <- c("Year", "Tank.ID", "Clutch.ID", "Date.stocked", "Stocking.density",
"temp_min", "temp_median", "temp_max", "temp_mean",
"prcp_cumulative", "prcp_mean", "prcp_median",
"vp_min", "vp_max", "vp_median", "vp_mean", "std_temp_min", "std_temp_median", "std_temp_max", "std_temp_mean",
"std_prcp_cumulative", "std_prcp_mean", "std_prcp_median",
"std_vp_min", "std_vp_max", "std_vp_median", "std_vp_mean",
"Date.metamorphosed", "Mass.g.metamorphosed", "Fate")
merged.Master.met <- merged.Master.met %>%
select(all_of(column_order))
dead_individuals <- dead_individuals %>%
select(all_of(column_order))
# Convert date columns to Date class in both data frames
merged.Master.met$Date.stocked <- as.Date(merged.Master.met$Date.stocked, format = "%Y-%m-%d")  # Adjust format as needed
merged.Master.met$Date.metamorphosed <- as.Date(merged.Master.met$Date.metamorphosed, format = "%Y-%m-%d")  # Adjust format as needed
dead_individuals$Date.stocked <- as.Date(dead_individuals$Date.stocked, format = "%Y-%m-%d")  # Adjust format as needed
dead_individuals$Date.metamorphosed <- as.Date(dead_individuals$Date.metamorphosed, format = "%Y-%m-%d")  # Adjust format as needed
# Now combine the two dataframes
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
all.tadpoles$std_Stocking.density <- scale(all.tadpoles$Stocking.density, center = TRUE, scale = TRUE)
# Step 5: Check the result
nrow(all.tadpoles)  # Should now have the correct number of rows
head(all.tadpoles)  # Check the first few rows
View(all.tadpoles)
# Now combine the two dataframes
all.tadpoles <- rbind(merged.Master.met, dead_individuals)
