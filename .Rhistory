plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# Summarize Days.to.metamorphosis by year
met_summary <- merged.Master.met %>%
group_by(Year) %>%
summarise(
# Handle cases where there are no valid data points
days_min = ifelse(all(is.na(Days.to.metamorphosis)), NA, min(Days.to.metamorphosis, na.rm = TRUE)),
days_median = ifelse(all(is.na(Days.to.metamorphosis)), NA, median(Days.to.metamorphosis, na.rm = TRUE)),
days_mean = ifelse(all(is.na(Days.to.metamorphosis)), NA, mean(Days.to.metamorphosis, na.rm = TRUE)),
days_max = ifelse(all(is.na(Days.to.metamorphosis)), NA, max(Days.to.metamorphosis, na.rm = TRUE))
)
# Plot the summarized data
ggplot(met_summary, aes(x = Year)) +
geom_line(aes(y = days_mean, color = "Mean"), size = 1) +
geom_point(aes(y = days_mean, color = "Mean"), size = 2) +
geom_line(aes(y = days_max, color = "Max"), size = 1) +
geom_point(aes(y = days_max, color = "Max"), size = 2) +
geom_line(aes(y = days_min, color = "Min"), size = 1) +
geom_point(aes(y = days_min, color = "Min"), size = 2) +
geom_line(aes(y = days_median, color = "Median"), size = 1) +
geom_point(aes(y = days_median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "steelblue", "Max" = "red", "Min" = "black", "Median" = "green")) +
labs(
title = "Days to Metamorphosis per Year",
x = "Year",
y = "Days to Metamorphosis",
color = "Statistic"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# Left join weather_summary into met_summary based on 'year'
# Change the column name 'year' to 'Year' in the weather_summary data frame
# Convert 'Year' in weather_summary to character
merged.Master.met$Year <- as.character(merged.Master.met$Year)
weather_summary$year <- as.character(weather_summary$year)
Plotting mean days to metamorphosis and mean temp per year
Plotting mean days to metamorphosis and mean temp per year
colnames(merged_with_weather)
# Remove rows where either days_mean or temp_mean is NA
merged_with_weather <- merged_with_weather %>%
filter(!is.na(days_mean) & !is.na(temp_mean))
# Remove rows with unreasonable values
merged_with_weather <- merged_with_weather %>%
filter(temp_mean >= -50 & temp_mean <= 250,  # Adjust the range as needed
days_mean > 0)
# Compute the average days to metamorphosis per year
merged_with_weather <- merged_with_weather %>%
group_by(Year) %>%
mutate(days_mean = mean(Days.to.metamorphosis, na.rm = TRUE)) %>%
ungroup()  # Remove grouping after calculation
ggplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 1) +
geom_point(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Days to Metamorphosis" = "darkorange")) +
labs(
title = "Mean Days to Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
gplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 1) +
geom_point(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Days to Metamorphosis" = "darkorange")) +
labs(
title = "Mean Days to Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0, 150) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
gplot(merged_with_weather, aes(x = Year)) +
geom_line(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 1) +
geom_point(aes(y = temp_mean, color = "Mean Temp (°C)"), size = 2) +
geom_line(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 1) +
geom_point(aes(y = days_mean, color = "Average Days to Metamorphosis"), size = 2) +
scale_color_manual(values = c("Mean Temp (°C)" = "steelblue",
"Average Days to Metamorphosis" = "darkorange")) +
labs(
title = "Mean Days to Metamorphosis and Mean Temperature per Year",
x = "Year",
y = "Value",
color = "Statistic"
) +
ylim(0, 150) +  # Limit y-axis values up to 150
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
## SD vs Survivorship
library(ggplot2)
# Create a scatter plot using Merged.master.met dataset
ggplot(merged.Master.met, aes(x = Stocking.density, y = Surv.prop)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Add a regression line
labs(
title = "Survivorship vs. Stocking Density",
x = "Stocking Density",
y = "Survivorship Proportion"
) +
theme_minimal()
p1
plot_model(mass_model)
## SD vs Survivorship
library(ggplot2)
# Create a scatter plot using Merged.master.met dataset
ggplot(merged.Master.met, aes(x = Stocking.density, y = Surv.prop)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Add a regression line
labs(
title = "Survivorship vs. Stocking Density",
x = "Stocking Density",
y = "Survivorship Proportion"
) +
theme_minimal()
# View the resulting dataframe
head(all_data_with_dead)
# Create a new dataframe with Tank.ID count by Year
Ind.per.tank <- merged.Master.met %>%
group_by(Year, Tank.ID) %>%
summarise(Ind.per.tank = n(), .groups = 'drop')
# Join Stocking.density to the tank_counts_by_year dataframe
Ind.per.tank <- Ind.per.tank %>%
left_join(merged.Master.met %>%
select(Year, Tank.ID, Stocking.density) %>%
distinct(),
by = c("Year", "Tank.ID"))
# View the resulting dataframe
head(Ind.per.tank)
Ind.per.tank$No.dead <- Ind.per.tank$Stocking.density - Ind.per.tank$Ind.per.tank
merged.Master.met$Fate <- 1
all.tadpoles.livedead <- merged_with_weather
library(tidyr)
# Step 1: Create a dataframe with the dead individuals (Fate = 0)
dead_individuals <- Ind.per.tank %>%
# Replicate the rows based on No.dead column to create as many rows as dead individuals
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
View(dat.meta2024)
View(dat.meta2024)
View(master.met2024)
View(merged_with_weather)
# Saving full merged master dataframe to source
write.csv(merged.Master.met, "merged.Master.met.csv", row.names = FALSE)
View(merged.Master.met)
# View the resulting dataframe
head(all_data_with_dead)
# Step 1: Create a dataframe with the dead individuals (Fate = 0)
dead_individuals <- Ind.per.tank %>%
# Replicate the rows based on No.dead column to create as many rows as dead individuals
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# Step 1: Create a dataframe with the dead individuals (Fate = 0)
dead_individuals <- Ind.per.tank %>%
# Replicate the rows based on No.dead column to create as many rows as dead individuals
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
View(Ind.per.tank)
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead)) %>%                      # Remove rows with NA in No.dead
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
View(dead_individuals)
merged_deadlive <- left_join(merged.Master.met, dead_individuals, by = "Year", "Tank.ID")
View(merged_deadlive)
View(merged_with_weather_clean)
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
dead_individuals$Year <- as.numeric(dead_individuals$Year)
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
Perform the left join and select the desired covariates
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
View(dead_individuals)
View(merged_with_weather)
View(merged_with_weather_clean)
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead)) %>%                      # Remove rows with NA in No.dead
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather_clean %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, prcp_mean.std, temp_max.std,
temp_min.std, Stocking.density.std),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead)) %>%                      # Remove rows with NA in No.dead
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather_clean %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, prcp_mean.std, temp_max.std,
temp_min.std, Stocking.density.std),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
dead_individuals <- Ind.per.tank %>%
filter(!is.na(No.dead)) %>%                      # Remove rows with NA in No.dead
rowwise() %>%
mutate(dead_individuals = list(rep(0, No.dead))) %>%
unnest(dead_individuals) %>%
select(Year, Tank.ID, dead_individuals) %>%
mutate(Fate = 0)  # Assign Fate = 0 for dead individuals
dead_individuals$Year <- as.numeric(dead_individuals$Year)
dead_individuals$Tank.ID <- as.numeric(dead_individuals$Tank.ID)
# Perform the left join and select the desired covariates
dead_individuals <- left_join(dead_individuals,
merged_with_weather_clean %>%
select(Year, Tank.ID, Stocking.density,
temp_min, temp_median, temp_max, temp_mean,
prcp_cumulative, prcp_mean, prcp_median,
vp_min, vp_max, vp_median, vp_mean, prcp_mean.std, temp_max.std,
temp_min.std, Stocking.density.std),
by = c("Year" = "Year", "Tank.ID" = "Tank.ID"))
View(dead_individuals)
days_model
days_model
p1
# Model for days to metamorphosis
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
summary(days_model)
plot_model(days_model)
days_model
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
summary(days_model)
plot_model(days_model)
days_model
Model for days to metamorphosis
# Model for days to metamorphosis
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
# LME model
library(lme4)
library(dplyr)
# Standardize variables
merged_with_weather <- merged_with_weather %>%
mutate(
Stocking.density.std = (Stocking.density - mean(Stocking.density, na.rm = TRUE)) / sd(Stocking.density, na.rm = TRUE),
temp_max.std = (temp_max - mean(temp_max, na.rm = TRUE)) / sd(temp_max, na.rm = TRUE),
temp_min.std = (temp_min - mean(temp_min, na.rm = TRUE)) / sd(temp_min, na.rm = TRUE),
prcp_mean.std = (prcp_mean - mean(prcp_mean, na.rm = TRUE)) / sd(prcp_mean, na.rm = TRUE)
)
# Remove NA values from DTM
merged_with_weather_clean <- merged_with_weather %>%
filter(!is.na(Days.to.metamorphosis))
# Model for days to metamorphosis
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
summary(days_model)
plot_model(days_model)
# Model for days to metamorphosis
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
summary(days_model)
plot_model(days_model)
plot_model(days_model)
# Model for days to metamorphosis
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model)
## how to find p value with this model, and correlation coefficient r^2
# Estimate model for days to meta
library(sjPlot)
p1 <- plot_model(days_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p1 <- p1 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis), shape = 1, color = "black", size = 1)
library(ggplot2)
library(lme4)
library(dplyr)
# Standardize variables
merged_with_weather <- merged_with_weather %>%
mutate(
Stocking.density.std = (Stocking.density - mean(Stocking.density, na.rm = TRUE)) / sd(Stocking.density, na.rm = TRUE),
temp_max.std = (temp_max - mean(temp_max, na.rm = TRUE)) / sd(temp_max, na.rm = TRUE),
temp_min.std = (temp_min - mean(temp_min, na.rm = TRUE)) / sd(temp_min, na.rm = TRUE),
prcp_mean.std = (prcp_mean - mean(prcp_mean, na.rm = TRUE)) / sd(prcp_mean, na.rm = TRUE)
)
# Remove NA values from DTM
merged_with_weather_clean <- merged_with_weather %>%
filter(!is.na(Days.to.metamorphosis))
# Model for days to metamorphosis
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
summary(days_model)
plot_model(days_model)
## how to find p value with this model, and correlation coefficient r^2
# Estimate model for days to meta
library(sjPlot)
p1 <- plot_model(days_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p1 <- p1 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Days.to.metamorphosis), shape = 1, color = "black", size = 1)
p1
## can plot on one graph with different color lines, make each point more transparent
# Model for mass at metamorphosis
mass_model <- lmer(Mass.g.metamorphosed ~ temp_min + temp_max + prcp_mean + Stocking.density + (1 | Year) + (1|Tank.ID), data = merged_with_weather)
summary(mass_model)
plot_model(mass_model)
## Predict effects on mass at metamorphosis
p2 <- plot_model(mass_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p2 <- p2 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Mass.g.metamorphosed), shape = 1, color = "black", size = 1)
## Predict effects on mass at metamorphosis
p2 <- plot_model(mass_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
p2 <- p2 +
geom_point(data = merged_with_weather_clean, aes(x = temp_max.std, y = Mass.g.metamorphosed), shape = 1, color = "black", size = 1)
mass_model <- lmer(Mass.g.metamorphosed ~ temp_min + temp_max + prcp_mean + Stocking.density + (1 | Year) + (1|Tank.ID), data = merged_with_weather)
summary(mass_model)
plot_model(mass_model)
## Predict effects on mass at metamorphosis
p2 <- plot_model(mass_model, type = "pred", terms = c("temp_max.std", "prcp_mean.std[3.683709]", "Stocking.density.std[-2, 0, 2]"))
View(mass_model)
View(mass_model)
View(merged_with_weather)
# Create density range categories
subset_density_days <- merged_with_weather %>%
mutate(density_range = case_when(
Stocking.density >= 0 & Stocking.density <= 30 ~ "0-30",
Stocking.density >= 31 & Stocking.density <= 60 ~ "31-60",
Stocking.density >= 61 & Stocking.density <= 90 ~ "61-90",
Stocking.density >= 91 ~ "91+"
))
# Summary statistics by density range
summary_stats <- subset_density_days %>%
group_by(density_range) %>%
summarize(
min_days = min(Days.to.metamorphosis, na.rm = TRUE),
max_days = max(Days.to.metamorphosis, na.rm = TRUE),
avg_days = mean(Days.to.metamorphosis, na.rm = TRUE)
) %>%
arrange(density_range)
print(summary_stats)
ggplot(subset_density_days, aes(x = density_range, y = days_to_metamorphosis)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(
title = "Days to Metamorphosis by Stocking Density Range",
x = "Stocking Density Range",
y = "Days to Metamorphosis"
) +
theme_minimal()
ggplot(subset_density_days, aes(x = density_range, y = Days.to.metamorphosis)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(
title = "Days to Metamorphosis by Stocking Density Range",
x = "Stocking Density Range",
y = "Days to Metamorphosis"
) +
theme_minimal()
## Plot for SD ranges vs Mass at meta ##
subset_density_mass <- merged_with_weather %>%
mutate(density_range = case_when(
Stocking.density >= 0 & Stocking.density <= 30 ~ "0-30",
Stocking.density >= 31 & Stocking.density <= 60 ~ "31-60",
Stocking.density >= 61 & Stocking.density <= 90 ~ "61-90",
Stocking.density >= 91 ~ "91+"
))
# Summary statistics by density range
summary_stats <- subset_density_mass %>%
group_by(density_range) %>%
summarize(
min_days = min(Mass.g.metamorphosed, na.rm = TRUE),
max_days = max(Mass.g.metamorphosed, na.rm = TRUE),
avg_days = mean(Mass.g.metamorphosed, na.rm = TRUE)
) %>%
arrange(density_range)
print(summary_stats)
ggplot(subset_density_days, aes(x = density_range, y = Mass.g.metamorphosed)) +
geom_boxplot(fill = "pink", color = "black") +
labs(
title = "Days to Metamorphosis by Stocking Density Range",
x = "Stocking Density Range",
y = "Days to Metamorphosis"
) +
## Plot for SD ranges vs Mass at meta ##
subset_density_mass <- merged_with_weather %>%
mutate(density_range = case_when(
Stocking.density >= 0 & Stocking.density <= 30 ~ "0-30",
Stocking.density >= 31 & Stocking.density <= 60 ~ "31-60",
Stocking.density >= 61 & Stocking.density <= 90 ~ "61-90",
Stocking.density >= 91 ~ "91+"
))
## Plot for SD ranges vs Mass at meta ##
subset_density_mass <- merged_with_weather %>%
mutate(density_range = case_when(
Stocking.density >= 0 & Stocking.density <= 30 ~ "0-30",
Stocking.density >= 31 & Stocking.density <= 60 ~ "31-60",
Stocking.density >= 61 & Stocking.density <= 90 ~ "61-90",
Stocking.density >= 91 ~ "91+"
))
# Summary statistics by density range
summary_stats <- subset_density_mass %>%
group_by(density_range) %>%
summarize(
min_days = min(Mass.g.metamorphosed, na.rm = TRUE),
max_days = max(Mass.g.metamorphosed, na.rm = TRUE),
avg_days = mean(Mass.g.metamorphosed, na.rm = TRUE)
) %>%
arrange(density_range)
print(summary_stats)
ggplot(subset_density_days, aes(x = density_range, y = Mass.g.metamorphosed)) +
geom_boxplot(fill = "pink", color = "black") +
labs(
title = "Days to Metamorphosis by Stocking Density Range",
x = "Stocking Density Range",
y = "Days to Metamorphosis"
) +
theme_minimal()
ggplot(subset_density_days, aes(x = density_range, y = Mass.g.metamorphosed)) +
geom_boxplot(fill = "pink", color = "black") +
labs(
title = "Mass at Metamorphosis by Stocking Density Range",
x = "Stocking Density Range",
y = "Mass at Metamorphosis"
) +
theme_minimal()
ggplot(subset_density_days, aes(x = density_range, y = Mass.g.metamorphosed)) +
geom_boxplot(fill = "pink", color = "black") +
labs(
title = "Mass at Metamorphosis by Stocking Density Range",
x = "Stocking Density Range",
y = "Mass at Metamorphosis (g)"
) +
theme_minimal()
# Summary statistics by density range
summary_stats <- subset_density_mass %>%
group_by(density_range) %>%
summarize(
min_days = min(Mass.g.metamorphosed, na.rm = TRUE),
max_days = max(Mass.g.metamorphosed, na.rm = TRUE),
avg_days = mean(Mass.g.metamorphosed, na.rm = TRUE)
) %>%
arrange(density_range)
print(summary_stats)
subset_density_mass <- merged_with_weather %>%
mutate(density_range = case_when(
Stocking.density >= 0 & Stocking.density <= 30 ~ "0-30",
Stocking.density >= 31 & Stocking.density <= 60 ~ "31-60",
Stocking.density >= 61 & Stocking.density <= 90 ~ "61-90",
Stocking.density >= 91 ~ "91+"
))
# Summary statistics by density range
summary_stats <- subset_density_mass %>%
group_by(density_range) %>%
summarize(
min_mass = min(Mass.g.metamorphosed, na.rm = TRUE),
max_mass = max(Mass.g.metamorphosed, na.rm = TRUE),
avg_mass = mean(Mass.g.metamorphosed, na.rm = TRUE)
) %>%
arrange(density_range)
print(summary_stats)
