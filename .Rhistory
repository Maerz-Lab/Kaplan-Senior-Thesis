std_temp_max = mean(all.tadpoles$std_temp_max, na.rm = TRUE),
std_prcp_mean = mean(all.tadpoles$std_prcp_mean, na.rm = TRUE),
Year = NA,
Tank.ID = NA
)
# Step 5: Predict using your model
new_data$predicted_survivorship <- predict(fate_model, newdata = new_data, type = "response", re.form = NA)
# Step 6: Combine with actual densities for clarity
new_data$actual_density <- actual_densities
# View results
new_data[, c("actual_density", "predicted_survivorship")]
library(sjPlot)
library(ggplot2)
plot_model(days_model,
type = "pred",
terms = c("Stocking.density.std"),
title = "Effect of Stocking Density on Days to Metamorphosis") +
scale_x_continuous(
breaks = std_vals,
labels = round(real_vals, 1)  # rounded for prettier labels
) +
xlab("Stocking Density") +
ylab("Predicted Days to Metamorphosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
# Step 1: Mean and SD of the original variable
stocking_mean <- mean(merged_with_weather_clean$Stocking.density, na.rm = TRUE)
stocking_sd <- sd(merged_with_weather_clean$Stocking.density, na.rm = TRUE)
# Step 2: Define standard values shown in plot_model
std_vals <- c(-2, -1, 0, 1, 2)
# Step 3: Convert them back to actual stocking density values
real_vals <- std_vals * stocking_sd + stocking_mean
plot_model(mass_model,
type = "pred",
terms = c("Stocking.density.std"),
title = "Effect of Stocking Density on Days to Metamorphosis") +
scale_x_continuous(
breaks = std_vals,
labels = round(real_vals, 1)  # rounded for prettier labels
) +
xlab("Stocking Density") +
ylab("Predicted Mass at Metamorphosis (g)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
# Step 1: Mean and SD of the original variable
stocking_mean <- mean(merged_with_weather_clean$Stocking.density, na.rm = TRUE)
stocking_sd <- sd(merged_with_weather_clean$Stocking.density, na.rm = TRUE)
# Step 2: Define standard values shown in plot_model
std_vals <- c(-2, -1, 0, 1, 2)
# Step 3: Convert them back to actual stocking density values
real_vals <- std_vals * stocking_sd + stocking_mean
plot_model(mass_model,
type = "pred",
terms = c("Stocking.density.std"),
title = "Effect of Stocking Density on Mass at Metamorphosis") +
scale_x_continuous(
breaks = std_vals,
labels = round(real_vals, 1)  # rounded for prettier labels
) +
xlab("Stocking Density") +
ylab("Predicted Mass at Metamorphosis (g)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
library(scales)
plot_model(fate_model,
type = "pred",
terms = c("std_Stocking.density"),  # must match model variable name exactly
title = "Predicted Survivorship by Stocking Density") +
# Convert y-axis from % to raw probability
scale_y_continuous(labels = number_format(accuracy = 0.01)) +
# Convert x-axis from standardized to actual values
scale_x_continuous(
breaks = std_vals,
labels = round(real_vals, 1)
) +
xlab("Stocking Density") +
ylab("Predicted Probability of Survivorship") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
#Predicted average survivorship
# Step 1: Get mean and SD of stocking density used for standardization
stocking_mean <- mean(all.tadpoles$Stocking.density, na.rm = TRUE)
stocking_sd <- sd(all.tadpoles$Stocking.density, na.rm = TRUE)
# Step 2: Specify actual stocking densities
actual_densities <- c(50, 60, 75, 100)
# Step 3: Standardize them to match model input
std_densities <- (actual_densities - stocking_mean) / stocking_sd
# Step 4: Create new data frame for prediction
# You’ll need to supply mean values or fixed values for other predictors
new_data <- data.frame(
std_Stocking.density = std_densities,
std_temp_min = mean(all.tadpoles$std_temp_min, na.rm = TRUE),
std_temp_max = mean(all.tadpoles$std_temp_max, na.rm = TRUE),
std_prcp_mean = mean(all.tadpoles$std_prcp_mean, na.rm = TRUE),
Year = NA,
Tank.ID = NA
)
# Step 5: Predict using your model
new_data$predicted_survivorship <- predict(fate_model, newdata = new_data, type = "response", re.form = NA)
# Step 6: Combine with actual densities for clarity
new_data$actual_density <- actual_densities
# View results
new_data[, c("actual_density", "predicted_survivorship")]
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis",
show.values = FALSE,
show.p = FALSE,
axis.labels = c("Stocking Density",
"Mean Precipitation (mm)",
"Maximum Temp (°C)",
"Minimum Temp (°C)")) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
plot_model(days_model, type = "pred", c("std_Stocking.density"))
# MODEL - Estimated effects of standardized variables on days to meta
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std + (1 | Year) + (1|Tank.ID), data = merged_with_weather_clean)
plot_model(days_model,
title = "Effects of Weather and Stocking Density on Days to Metamorphosis",
show.values = FALSE,
show.p = FALSE,
axis.labels = c("Stocking Density",
"Mean Precipitation (mm)",
"Maximum Temp (°C)",
"Minimum Temp (°C)")) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
plot_model(days_model, type = "pred", c("std_Stocking.density"))
plot_model(mass_model,
title = "Effects of Weather and Stocking Density on Mass at Metamorphosis",
show.values = FALSE,
show.p = FALSE,
axis.labels = c("Stocking Density",
"Mean Precipitation (mm)",
"Maximum Temp (°C)",
"Minimum Temp (°C)")) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
library(dplyr)
all.tadpoles %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
group_by(Stocking.density) %>%
summarise(
Mean_Survivorship = mean(Fate, na.rm = TRUE),
N = n()
)
summary_data_SD_fate <- all.tadpoles %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(Fate)) %>%  # Remove NA
group_by(Stocking.density) %>%
summarise(
avg_fate = mean(Fate, na.rm = TRUE),
min_fate = min(Fate, na.rm = TRUE),
max_fate = max(Fate, na.rm = TRUE)
) %>%
mutate(
fate_range = paste(min_fate, "-", max_fate)  # Combine min and max days into a range
)
print(summary_data_SD_fate)
# GRAPH - mass by SD
ggplot(all.tadpoles %>% filter(Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = Fate)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "lightgreen") +
labs(
title = "Fate by Stocking Density",
x = "Stocking Density",
y = "Fate"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# View summary
print(summary_data_SD_fate)
citation("dplyr")
citation("lubridate")
summary_data_SD_mass <- mass_model %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(Mass.g.metamorphosed) & Mass.g.metamorphosed != 0) %>%  # Remove NA and 0 values
group_by(Stocking.density) %>%
summarise(
avg_mass = mean(Mass.g.metamorphosed, na.rm = TRUE),
min_mass = min(Mass.g.metamorphosed, na.rm = TRUE),
max_mass = max(Mass.g.metamorphosed, na.rm = TRUE)
) %>%
mutate(
mass_range = paste(min_mass, "-", max_mass)  # Combine min and max days into a range
)
# Step 1: Generate predicted values from the model
merged.Master.met$predicted_mass <- predict(mass_model, newdata = merged.Master.met, re.form = NA)  # re.form = NA excludes random effects
summary_data_SD_mass_pred <- merged.Master.met %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(predicted_mass)) %>%
group_by(Stocking.density) %>%
summarise(
avg_pred_mass = mean(predicted_mass, na.rm = TRUE),
min_pred_mass = min(predicted_mass, na.rm = TRUE),
max_pred_mass = max(predicted_mass, na.rm = TRUE)
) %>%
mutate(
predicted_mass_range = paste0(round(min_pred_mass, 2), " - ", round(max_pred_mass, 2))
)
summary(summary_data_SD_mass_pred)
# Step 1: Add predicted values to the dataset
merged.Master.met$predicted_mass <- predict(mass_model, newdata = merged.Master.met, re.form = NA)
# Step 1: Add predicted values to the dataset
merged.Master.met$predicted_mass <- predict(mass_model, newdata = merged.Master.met, re.form = NA)
# Step 1: Add predicted values to the dataset
merged.Master.met$predicted_mass <- predict(mass_model, newdata = merged.Master.met, re.form = NA)
# Step 1: Add predicted values to the dataset
merged.Master.met$predicted_mass <- predict(mass_model, newdata = merged.Master.met, re.form = NA)
# Step 2: Filter and split by Stocking.density, then summarize into a list
summary_list_SD_mass_pred <- merged.Master.met %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(predicted_mass)) %>%
group_by(Stocking.density) %>%
summarise(
avg = mean(predicted_mass, na.rm = TRUE),
min = min(predicted_mass, na.rm = TRUE),
max = max(predicted_mass, na.rm = TRUE),
range = paste0(round(min(predicted_mass, 2)), " - ", round(max(predicted_mass, 2)))
) %>%
split(.$Stocking.density)  # Convert to list, keyed by Stocking.density
# Step 1: Add predicted values (fixed effects only) to the dataset
merged.Master.met <- merged.Master.met %>%
mutate(predicted_mass = predict(mass_model, newdata = ., re.form = NA))
# Step 1: Add predicted values (fixed effects only) to the dataset
merged.Master.met <- merged.Master.met %>%
mutate(predicted_mass = predict(mass_model, newdata = ., re.form = NA))
merged_with_weather_clean <- merged_with_weather_clean %>%
mutate(predicted_mass = predict(mass_model, newdata = ., re.form = NA))
# Summarize predicted values by stocking density
summary_list_SD_mass_pred <- merged_with_weather_clean %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(predicted_mass)) %>%
group_by(Stocking.density) %>%
summarise(
avg = mean(predicted_mass),
min = min(predicted_mass),
max = max(predicted_mass),
range = paste0(round(min(predicted_mass, 2)), " - ", round(max(predicted_mass, 2)))
) %>%
split(.$Stocking.density)
summary_list_SD_mass_pred[["50"]]
# Add predicted values (fixed effects only)
merged_with_weather_clean <- merged_with_weather_clean %>%
mutate(predicted_mass = predict(mass_model, newdata = ., re.form = NA))
# Add predicted values (fixed effects only)
merged_with_weather_clean <- merged_with_weather_clean %>%
mutate(predicted_mass = predict(mass_model, newdata = ., re.form = NA))
# Summarize predicted values by stocking density
summary_list_SD_mass_pred <- merged_with_weather_clean %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(predicted_mass)) %>%
group_by(Stocking.density) %>%
summarise(
avg = mean(predicted_mass),
min = min(predicted_mass),
max = max(predicted_mass),
range = min(predicted_mass, 2), " - ", max(predicted_mass, 2)
) %>%
split(.$Stocking.density)
summary_list_SD_mass_pred[["50"]]
# Summarize predicted values by stocking density
summary_list_SD_mass_pred <- merged_with_weather_clean %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(predicted_mass)) %>%
group_by(Stocking.density) %>%
summarise(
avg = mean(predicted_mass),
min = min(predicted_mass),
max = max(predicted_mass),
range = min(predicted_mass), " - ", max(predicted_mass)
) %>%
split(.$Stocking.density)
summary_list_SD_mass_pred[["50"]]
summary_list_SD_mass_pred[["60"]]
summary_list_SD_mass_pred[["75"]]
summary_list_SD_mass_pred[["100"]]
# GRAPH - mass by SD
ggplot(summary_data_SD_mass %>% filter(Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = Mass.g.metamorphosed)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "pink") +
labs(
title = "Mass by Stocking Density",
x = "Stocking Density",
y = "Mass (g)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# GRAPH - mass by SD
ggplot(summary_data_SD_mass %>% filter(Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_mass)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "pink") +
labs(
title = "Mass by Stocking Density",
x = "Stocking Density",
y = "Mass (g)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# Calculate summary statistics including min, max, and avg for Days.to.metamorphosis by Stocking.density
summary_data_SD_days <- merged.Master.met %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(Days.to.metamorphosis) & Days.to.metamorphosis != 0) %>%  # Remove NA and 0 values
group_by(Stocking.density) %>%
summarise(
avg_days = median(Days.to.metamorphosis, na.rm = TRUE),
min_days = min(Days.to.metamorphosis, na.rm = TRUE),
max_days = max(Days.to.metamorphosis, na.rm = TRUE)
) %>%
mutate(
day_range = paste(min_days, "-", max_days)  # Combine min and max days into a range
)
# Convert to long form for better graphing
summary_data_long_days <- summary_data_SD_days %>%
pivot_longer(cols = c(avg_days),
names_to = "Metric",
values_to = "Value")
library(dplyr)
summary_data_SD_fate <- all.tadpoles %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(Fate)) %>%  # Remove NA
group_by(Stocking.density) %>%
summarise(
avg_fate = mean(Fate, na.rm = TRUE),
min_fate = min(Fate, na.rm = TRUE),
max_fate = max(Fate, na.rm = TRUE)
) %>%
mutate(
fate_range = paste(min_fate, "-", max_fate)  # Combine min and max days into a range
)
print(summary_data_SD_fate)
# GRAPH - mass by SD
ggplot(all.tadpoles %>% filter(Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = Fate)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "lightgreen") +
labs(
title = "Fate by Stocking Density",
x = "Stocking Density",
y = "Fate"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# View summary
print(summary_data_SD_fate)
# GRAPH - mass by SD
ggplot(merged.Master.met %>% filter(Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = Mass.g.metamorphosed)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "pink") +
labs(
title = "Mass by Stocking Density",
x = "Stocking Density",
y = "Mass (g)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
# Calculate summary statistics including min, max, and avg for Days.to.metamorphosis by Stocking.density
summary_data_SD_days <- merged.Master.met %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(Days.to.metamorphosis) & Days.to.metamorphosis != 0) %>%  # Remove NA and 0 values
group_by(Stocking.density) %>%
summarise(
avg_days = median(Days.to.metamorphosis, na.rm = TRUE),
min_days = min(Days.to.metamorphosis, na.rm = TRUE),
max_days = max(Days.to.metamorphosis, na.rm = TRUE)
) %>%
mutate(
day_range = paste(min_days, "-", max_days)  # Combine min and max days into a range
)
print(summary_data_SD_days)
# Calculate summary statistics including min, max, and avg for Days.to.metamorphosis by Stocking.density
summary_data_SD_days <- days_model %>%
filter(Stocking.density %in% c(50, 60, 75, 100)) %>%
filter(!is.na(Days.to.metamorphosis) & Days.to.metamorphosis != 0) %>%  # Remove NA and 0 values
group_by(Stocking.density) %>%
summarise(
avg_days = median(Days.to.metamorphosis, na.rm = TRUE),
min_days = min(Days.to.metamorphosis, na.rm = TRUE),
max_days = max(Days.to.metamorphosis, na.rm = TRUE)
) %>%
mutate(
day_range = paste(min_days, "-", max_days)  # Combine min and max days into a range
)
## Summarize average Days to metamorphosis by Stocking.density ##
days_model <- lmer(Days.to.metamorphosis ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std +
(1 | Year) + (1 | Tank.ID), data = merged_with_weather_clean)
# Add fixed-effect predictions to a new column
predicted_data <- merged_with_weather_clean %>%
mutate(predicted_days = predict(days_model, newdata = ., re.form = NA))
summary_predicted_days <- predicted_data %>%
filter(!is.na(predicted_days)) %>%
group_by(Stocking.density) %>%
summarise(
avg_pred = mean(predicted_days),
min_pred = min(predicted_days),
max_pred = max(predicted_days),
range = paste0(round(min_pred, 1), " - ", round(max_pred, 1))
)
print(summary_predicted_days)
mass_model <- lmer(Mass.g.metamorphosed ~ temp_min.std + temp_max.std + prcp_mean.std + Stocking.density.std +
(1 | Year) + (1 | Tank.ID), data = merged_with_weather_clean)
# Add fixed-effect predictions to a new column
predicted_data_mass <- merged_with_weather_clean %>%
mutate(predicted_mass = predict(mass_model, newdata = ., re.form = NA))
summary_predicted_mass <- predicted_data_mass %>%
filter(!is.na(predicted_mass)) %>%
group_by(Stocking.density) %>%
summarise(
avg_pred = mean(predicted_mass),
min_pred = min(predicted_mass),
max_pred = max(predicted_mass),
range = paste0(round(min_pred, 1), " - ", round(max_pred, 1))
)
print(summary_predicted_mass)
summary_data_long_mass <- summary_predicted_mass %>%
pivot_longer(cols = c(avg_mass),
names_to = "Metric",
values_to = "Value")
# GRAPH - mass by SD
ggplot(merged.Master.met %>% filter(Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = Mass.g.metamorphosed)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, fill = "pink") +
labs(
title = "Mass by Stocking Density",
x = "Stocking Density",
y = "Mass (g)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, family = "serif"),
text = element_text(family = "serif")
)
library(ggplot2)
ggplot(predicted_data %>% filter(!is.na(predicted_days) & Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_days)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16) +
labs(
title = "Predicted Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Predicted Days to Metamorphosis"
) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
library(ggplot2)
ggplot(predicted_data %>% filter(!is.na(predicted_days) & Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_days)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16) +
labs(
title = "Predicted Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Predicted Days to Metamorphosis"
) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
library(ggplot2)
ggplot(predicted_data %>% filter(!is.na(predicted_days) & Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_days)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16) +
labs(
title = "Predicted Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Predicted Days to Metamorphosis"
) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
library(dplyr)
ggplot(predicted_data %>% filter(!is.na(predicted_days) & Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_days)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16) +
labs(
title = "Predicted Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Predicted Days to Metamorphosis"
) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
ggplot(predicted_data %>% filter(!is.na(predicted_days) & Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_days)) +
geom_line(outlier.colour = "red", outlier.shape = 16) +
labs(
title = "Predicted Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Predicted Days to Metamorphosis"
) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
ggplot(predicted_data %>% filter(!is.na(predicted_days) & Stocking.density %in% c(50, 60, 75, 100)),
aes(x = factor(Stocking.density), y = predicted_days)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16) +
labs(
title = "Predicted Days to Metamorphosis by Stocking Density",
x = "Stocking Density",
y = "Predicted Days to Metamorphosis"
) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
View(dat.meta20092011)
